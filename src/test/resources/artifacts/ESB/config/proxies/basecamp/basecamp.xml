<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<proxy xmlns="http://ws.apache.org/ns/synapse" name="basecamp" transports="https,http" statistics="disable"
       trace="disable"
       startOnLoad="true">
    <target>
        <inSequence>
            <property name="name" expression="json-eval($.name)"/>
            <property name="description" expression="json-eval($.description)"/>
            <property name="apiUrl" expression="json-eval($.apiUrl)"/>
            <property name="accessToken" expression="json-eval($.accessToken)"/>
            <property name="accountId" expression="json-eval($.accountId)"/>
            <property name="userAgent" expression="json-eval($.userAgent)"/>
            <property name="projectId" expression="json-eval($.projectId)"/>
            <property name="todoListId" expression="json-eval($.todoListId)"/>
            <property name="content" expression="json-eval($.content)"/>
            <property name="dueDate" expression="json-eval($.dueDate)"/>
            <property name="assignee" expression="json-eval($.assignee)"/>
            <property name="todoId" expression="json-eval($.todoId)"/>
            <property name="personId" expression="json-eval($.personId)"/>
            <property name="subject" expression="json-eval($.subject)"/>
            <property name="messageId" expression="json-eval($.messageId)"/>
            <property name="todoSetId" expression="json-eval($.todoSetId)"/>
            <property name="since" expression="json-eval($.since)"/>
            <property name="type" expression="json-eval($.type)"/>
            <property name="status" expression="json-eval($.status)"/>
            <property name="messageBoardId" expression="json-eval($.messageBoardId)"/>
            <property name="categoryId" expression="json-eval($.categoryId)"/>
            <property name="startDate" expression="json-eval($.startDate)"/>
            <property name="notify" expression="json-eval($.notify)"/>
            <property name="recordingId" expression="json-eval($.recordingId)"/>
            <property name="grant" expression="json-eval($.grant)"/>
            <property name="revoke" expression="json-eval($.revoke)"/>
            <property name="create" expression="json-eval($.create)"/>
            <basecamp.init>
                <accessToken>{$ctx:accessToken}</accessToken>
                <apiUrl>{$ctx:apiUrl}</apiUrl>
                <accountId>{$ctx:accountId}</accountId>
                <userAgent>{$ctx:userAgent}</userAgent>
            </basecamp.init>
            <switch source="get-property('transport', 'Action')">
                <case regex="urn:createProject">
                    <basecamp.createProject>
                        <name>{$ctx:name}</name>
                        <description>{$ctx:description}</description>
                    </basecamp.createProject>
                </case>
                <case regex="urn:getProject">
                    <basecamp.getProject>
                        <projectId>{$ctx:projectId}</projectId>
                    </basecamp.getProject>
                </case>
                <case regex="urn:listProjects">
                    <basecamp.listProjects>
                        <status>{$ctx:status}</status>
                    </basecamp.listProjects>
                </case>
                <case regex="urn:updateProject">
                    <basecamp.updateProject>
                        <projectId>{$ctx:projectId}</projectId>
                        <name>{$ctx:name}</name>
                        <description>{$ctx:description}</description>
                    </basecamp.updateProject>
                </case>
                <case regex="urn:createComment">
                    <basecamp.createComment>
                        <content>{$ctx:content}</content>
                        <recordingId>{$ctx:recordingId}</recordingId>
                        <projectId>{$ctx:projectId}</projectId>
                    </basecamp.createComment>
                </case>
                <case regex="urn:createTodoLists">
                    <basecamp.createTodoLists>
                        <todoSetId>{$ctx:todoSetId}</todoSetId>
                        <projectId>{$ctx:projectId}</projectId>
                        <name>{$ctx:name}</name>
                        <description>{$ctx:description}</description>
                    </basecamp.createTodoLists>
                </case>
                <case regex="urn:getTodoLists">
                    <basecamp.getTodoLists>
                        <todoListId>{$ctx:todoListId}</todoListId>
                        <projectId>{$ctx:projectId}</projectId>
                    </basecamp.getTodoLists>
                </case>
                <case regex="urn:updateTodoLists">
                    <basecamp.updateTodoLists>
                        <todoListId>{$ctx:todoListId}</todoListId>
                        <projectId>{$ctx:projectId}</projectId>
                        <name>{$ctx:name}</name>
                        <description>{$ctx:description}</description>
                    </basecamp.updateTodoLists>
                </case>
                <case regex="urn:listTodoLists">
                    <basecamp.listTodoLists>
                        <todoSetId>{$ctx:todoSetId}</todoSetId>
                        <projectId>{$ctx:projectId}</projectId>
                        <status>{$ctx:status}</status>
                    </basecamp.listTodoLists>
                </case>
                <case regex="urn:getEvents">
                    <basecamp.getEvents>
                        <recordingId>{$ctx:recordingId}</recordingId>
                        <projectId>{$ctx:projectId}</projectId>
                    </basecamp.getEvents>
                </case>
                <case regex="urn:createTodo">
                    <basecamp.createTodo>
                        <projectId>{$ctx:projectId}</projectId>
                        <todoListId>{$ctx:todoListId}</todoListId>
                        <content>{$ctx:content}</content>
                        <description>{$ctx:description}</description>
                        <dueDate>{$ctx:dueDate}</dueDate>
                        <assignee>{$ctx:assignee}</assignee>
                        <notify>{$ctx:notify}</notify>
                        <startDate>{$ctx:startDate}</startDate>
                    </basecamp.createTodo>
                </case>
                <case regex="urn:getTodo">
                    <basecamp.getTodo>
                        <todoId>{$ctx:todoId}</todoId>
                        <projectId>{$ctx:projectId}</projectId>
                    </basecamp.getTodo>
                </case>
                <case regex="urn:updateTodo">
                    <basecamp.updateTodo>
                        <todoId>{$ctx:todoId}</todoId>
                        <projectId>{$ctx:projectId}</projectId>
                        <content>{$ctx:content}</content>
                    </basecamp.updateTodo>
                </case>
                <case regex="urn:listPeople">
                    <basecamp.listPeople/>
                </case>
                <case regex="urn:getProjectPeople">
                    <basecamp.getProjectPeople>
                        <projectId>{$ctx:projectId}</projectId>
                    </basecamp.getProjectPeople>
                </case>
                <case regex="urn:updateProjectPeople">
                    <basecamp.updateProjectPeople>
                        <projectId>{$ctx:projectId}</projectId>
                        <grant>{$ctx:grant}</grant>
                        <revoke>{$ctx:revoke}</revoke>
                        <create>{$ctx:create}</create>
                    </basecamp.updateProjectPeople>
                </case>
                <case regex="urn:createMessage">
                    <basecamp.createMessage>
                        <subject>{$ctx:subject}</subject>
                        <messageBoardId>{$ctx:messageBoardId}</messageBoardId>
                        <status>{$ctx:status}</status>
                        <projectId>{$ctx:projectId}</projectId>
                        <content>{$ctx:content}</content>
                        <categoryId>{$ctx:categoryId}</categoryId>
                    </basecamp.createMessage>
                </case>
                <case regex="urn:getMessage">
                    <basecamp.getMessage>
                        <projectId>{$ctx:projectId}</projectId>
                        <messageId>{$ctx:messageId}</messageId>
                    </basecamp.getMessage>
                </case>
                <case regex="urn:updateMessage">
                    <basecamp.updateMessage>
                        <projectId>{$ctx:projectId}</projectId>
                        <messageId>{$ctx:messageId}</messageId>
                        <subject>{$ctx:subject}</subject>
                        <content>{$ctx:content}</content>
                        <categoryId>{$ctx:categoryId}</categoryId>
                    </basecamp.updateMessage>
                </case>
            </switch>
            <respond/>
        </inSequence>
        <outSequence>
            <log/>
            <send/>
        </outSequence>
    </target>
    <description/>
</proxy>
                                